from typing import Optional, Tuple


class Literal:
    def data_type(self) -> str: ...
    
    def value_f32(self) -> Optional[float]: ...

    def value_f64(self) -> Optional[float]: ...

    def value_decimal128(self) -> Tuple[Optional[int], int, int]: ...

    def value_i8(self) -> Optional[int]: ...

    def value_i16(self) -> Optional[int]: ...

    def value_i32(self) -> Optional[int]: ...

    def value_i64(self) -> Optional[int]: ...

    def value_u8(self) -> Optional[int]: ...
    
    def value_u16(self) -> Optional[int]: ...

    def value_u32(self) -> Optional[int]: ...

    def value_u64(self) -> Optional[int]: ...

    def value_date32(self) -> Optional[int]: ...

    def value_date64(self) -> Optional[int]: ...

    def value_time64(self) -> Optional[int]: ...

    def value_timestamp(self) -> Tuple[Optional[int], Optional[int]]: ...

    def value_bool(self) -> Optional[bool]: ...

    def value_string(self) -> Optional[str]: ...

    def value_interval_day_time(self) -> Optional[Tuple[int, int]]: ...

    def into_type(self) -> Literal: ...

