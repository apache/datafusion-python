from typing import List, Optional, Tuple
from .. import LogicalPlan
from .base import Expr
from ..common import DFSchema


class JoinType:
    def is_outer(self) -> bool: ...

class JoinConstraint:
    ...


class Join:
    def left(self) -> LogicalPlan: ...
    
    def right(self) -> LogicalPlan: ...

    def on(self) -> List[Tuple[Expr, Expr]]: ...

    def filter(self) -> Optional[Expr]: ...

    def join_type(self) -> JoinType: ...

    def join_constraint(self) -> JoinConstraint: ...

    def schema(self) -> DFSchema: ...

    def null_equals_null(self) -> bool: ...

    def __name__(self) -> str: ...

